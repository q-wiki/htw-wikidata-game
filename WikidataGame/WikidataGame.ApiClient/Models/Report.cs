// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WikidataGame.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Report
    {
        /// <summary>
        /// Initializes a new instance of the Report class.
        /// </summary>
        public Report()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Report class.
        /// </summary>
        public Report(int problemType, int minigameType, string taskDescription, string providedAnswers, string id = default(string), string minigameId = default(string), string additionalInformation = default(string))
        {
            Id = id;
            ProblemType = problemType;
            MinigameId = minigameId;
            MinigameType = minigameType;
            TaskDescription = taskDescription;
            ProvidedAnswers = providedAnswers;
            AdditionalInformation = additionalInformation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "problemType")]
        public int ProblemType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minigameId")]
        public string MinigameId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minigameType")]
        public int MinigameType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taskDescription")]
        public string TaskDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providedAnswers")]
        public string ProvidedAnswers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "additionalInformation")]
        public string AdditionalInformation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TaskDescription == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TaskDescription");
            }
            if (ProvidedAnswers == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ProvidedAnswers");
            }
        }
    }
}
